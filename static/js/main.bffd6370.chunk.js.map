{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","length","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","user","firstName","lastName","formatName","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bffd6370.chunk.js","sourcesContent":["//import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n         <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n         <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n           <span className=\"navbar-toggler-icon\"></span>\r\n         </button>\r\n         <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n           <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n             <li className=\"nav-item\">\r\n               {/*<Link className=\"nav-linnpmk active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n               <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n             </li>\r\n             {/*<li className=\"nav-item\">\r\n               <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n             </li>*/}\r\n           </ul>\r\n           {/*<form className=\"d-flex\">\r\n             <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n             <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form>*/}\r\n           <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n         </div>\r\n       </div>\r\n     </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title:PropTypes.string.isRequired,\r\n  aboutText:PropTypes.string.isRequired\r\n\r\n}\r\n\r\nNavbar.defaultProps = { \r\n  title:'Set title here',\r\n  aboutText:'About text here'\r\n\r\n}\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n\r\n   const handleUpClick=()=> {\r\n     console.log(\"Uppercase was clicked\" + text);\r\n     let newText = text.toUpperCase();\r\n     setText(newText)\r\n     props.showAlert(\"Converted to Upper Case!\",\"success\")\r\n     let wordcount = text.length;\r\n    \r\n\r\n   }\r\n\r\n   const handleLoClick=()=> {\r\n    console.log(\"Lowercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n\r\n  }\r\n\r\n  const handleClearText=()=> {\r\n    console.log(\"Lowercase was clicked\" + text);\r\n    let newText = '';\r\n    setText(newText)\r\n\r\n  }\r\n  const handleCopyText=()=> {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n\r\n  }\r\n\r\n   const handleOnChange=(event)=> {\r\n    console.log(\"On Change\");\r\n    setText(event.target.value)\r\n  }\r\n\r\n    const [text,setText] = useState('');\r\n    //text=\"new text\"; wronng way\r\n    //setText=(\"new Text\") Correct way\r\n    return (\r\n        <>\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text}  onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearText}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopyText}>Copy Text</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>0.008 * {text.split(\" \").length} Minutes Read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter Text to Preview Here\"}</p>\r\n    </div>\r\n\r\n    </>\r\n\r\n\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\nconst capitalize =(word)=>{\r\n\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n}\r\n\r\n    return (\r\n      \r\n          props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Alert\r\n   ","\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";*/\n\nfunction App() {\n  const [mode,setMode] = useState('light'); //Whether dark mode is enabled or not\n  const [alert,setAlert] =  useState(null)\n\n  const toggleMode =() =>{\n\n    if(mode ==='light'){\n\n      setMode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark Mode has been Enabled\",\"success\");\n     // document.title = 'AITA - Dark Mode';\n     /*setInterval(()=>{\n      document.title = 'Text Utils Amazing Mode';\n     },2000);\n\n     setInterval(()=>{\n      document.title = 'Install TextUtils now';\n     },1500);*/\n\n    }\n    else{\n\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been Enabled\",\"success\");\n      //document.title = 'AITA - Light Mode';\n\n    }\n\n  }\n\n  const showAlert=(message,type)=>{\n\n   setAlert({\n\n    msg:message,\n    type:type\n\n   })\n\n   setTimeout(() =>{\n    setAlert(null);\n\n   },3000);\n\n  }\n  return (\n    <>\n    {/*<Router>*/}\n    <Navbar title =\"TextUtils\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode}/> \n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n   {/*<Switch>*/}\n      {/* ./users--->component 1\n      //users/home--->compenent 2*/}\n         {/*<Route exact path=\"/about\">\n            <About/>\n      </Route>*/}\n         {/*<Route exact path=\"/\">*/}\n            <Textform showAlert={showAlert} heading=\"Enter Text to Analyze below\" mode={mode} />\n         {/*</Route>*/}\n   {/*</Switch>*/}\n    </div>\n   {/*</Router>*/}\n   </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nfunction formatName(user){\n  return user.firstName+ ' '+user.lastName;\n\n}\n\nconst user = {\nfirstName: 'Tanmay',\nlastName:'Wadkar'\n\n};\n<h1>Hello, {formatName(user)}!</h1>\n\n\n\n/*function getGreetings(user){\n if(user){\n   return <h1>Hello, {formatName(user)}!</h1>\n\n }\n   return <h1>Hello,Stranger.</h1>\n \n}\nconst element = React.createElement(\n  'h1',\n  {className: 'greeting'},\n  'Hello, world!'\n);*/\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}